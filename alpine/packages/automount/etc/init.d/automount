#!/sbin/openrc-run

depend()
{
	after dev
	before docker
}

MAGIC="boot2docker, please format-me"


start()
{
	ebegin "Configuring host block device"

	DEV="$(lsblk -r | grep ' disk $' | awk '{print $1}' | head -1 )"

	[ -z ${DEV} ] && exit 1

	DRIVE="/dev/${DEV}"
        # Test for our magic string
        HEADER=`dd if=${DRIVE} bs=1 count=${#MAGIC} 2>/dev/null`

        if [ "$HEADER" = "$MAGIC" ]; then
                # save the preload userdata.tar file
                dd if=${DRIVE} of=/userdata.tar bs=1 count=4096 2>/dev/null
        fi

	if fdisk -l ${DRIVE} | grep -q "doesn't contain a valid partition table"
	then

		ERASE_DISKS="${DRIVE}" setup-disk -m data ${DRIVE}
		blockdev --rereadpt ${DRIVE} 2> /dev/null
	else
		SWAP=$(fdisk -l ${DRIVE} | grep 'Linux swap' | head -1 | awk '{print $1}')
		DATA=$(fdisk -l ${DRIVE} | grep 'Linux$' | head -1 | awk '{print $1}')
		if [ -z "$DATA" ]
		then
			ERASE_DISKS="${DRIVE}" setup-disk -m data ${DRIVE}
			blockdev --rereadpt ${DRIVE} 2> /dev/null
		else
			mount ${DATA} /var && swapon ${SWAP} || ( ERASE_DISKS="${DRIVE}" setup-disk -m data ${DRIVE}; blockdev --rereadpt ${DRIVE} 2> /dev/null )
			resize2fs ${DATA} 2> /dev/null
		fi
		# boot2docker compat, has /var and /tmp on partition
		[ -d /var/var/lib/boot2docker/ ] && mount --bind /var/var /var
	fi

	mount | grep -q "${DEV}. on /var type"

	eend $? "Failed to mount block device"

        if [ -e "/userdata.tar" ]; then
                mkdir -p /var/lib/boot2docker/
                mv /userdata.tar /var/lib/boot2docker/
        fi

        if [ -e "/var/lib/boot2docker/userdata.tar" ]; then
            tar xf /var/lib/boot2docker/userdata.tar -C /root/
        fi
}
