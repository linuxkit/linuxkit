#!/sbin/openrc-run

description="Bootstrap procedure if running on Docker Azure edition"

depend()
{
	need docker
	need networking
}

start()
{
	[ "$(mobyplatform)" != "azure" ] && exit 0
	ebegin "Running Azure-specific initialization"

	einfo "Setting hostname"

	# TODO: This is probably quite fragile (splitting the returned JSON by
	# quotes instead of properly parsing).  Would bundling 'jq' in Moby be
	# too much overhead?
	hostname $(wget -qO- http://169.254.169.254/metadata/v1/instanceinfo | awk -F '"' '{ print $4; }')

	for i in $(seq 1 20)
	do
		einfo "Pulling Windows Azure Linux Agent container"

		docker pull docker4x/agent-azure >/dev/null

		if [ $? -eq 0 ]
		then
			break
		fi

		# Wait for... network to come up?  DNS servers to be reachable?
		# Not certain, but Azure continually fails to achieve this pull so
		# far because it can't dial the DNS lookup properly.
		# 
		# TODO: Debug.
		sleep 5
	done

	einfo "Running Windows Azure Linux Agent container"

	docker run -d \
		--privileged \
		--name agent \
		--ipc host \
		--pid host \
		--net host \
		--restart unless-stopped \
		-v /usr/bin/docker:/usr/local/bin/docker:ro \
		-v /var/run/docker.sock:/var/run/docker.sock \
		-v /var/log:/var/log \
		-v /home:/home \
		-v /etc:/etc \
		-v /lib/modules:/lib/modules \
		-v /lib/firmware:/lib/firmware \
		-v /var/lib/waagent:/var/lib/waagent \
		docker4x/agent-azure

	# Wait for docker user to be added by agent.
	while [ ! -d /home/docker ]
	do
		sleep 5
	done

	# TODO: Make this cleaner.
	# User gets added by waagent.
	# Need to unlock it to login via SSH.
	passwd -u docker
	checkpath --directory --mode 0700 /home/docker/.ssh

	# Wait for custom data to arrive
	while [ ! -f /var/lib/waagent/CustomData ]
	do
		sleep 5
	done

	. /var/lib/waagent/CustomData

	eend 0
}

stop()
{
	[ "$(mobyplatform)" != "azure" ] && exit 0
	docker rm -f agent || true
	passwd -l docker
}
