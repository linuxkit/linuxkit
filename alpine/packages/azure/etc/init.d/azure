#!/sbin/openrc-run

description="Bootstrap procedure if running on Docker Azure edition"

depend()
{
	need docker
	need net
}

start()
{
	[ "$(mobyplatform)" != "azure" ] && exit 0
	ebegin "Running Azure-specific initialization"

	for i in $(seq 1 20)
	do
		einfo "Pulling Windows Azure Linux Agent container"

		docker pull docker4x/agent-azure >/dev/null

		if [ $? -eq 0 ]
		then
			break
		fi

		# Wait for... network to come up?  DNS servers to be reachable?
		# Not certain, but Azure continually fails to achieve this pull so
		# far because it can't dial the DNS lookup properly.
		# 
		# TODO: Debug.
		sleep 5
	done

	einfo "Running Windows Azure Linux Agent container"

	export DOCKER_FOR_IAAS_VERSION="azure-v1.13.0-rc5-beta15"
	export DOCKER_FOR_IAAS_VERSION_DIGEST="85c28edf90026ae6713c435fa40c36a1710e963a6478a7cdeac3da944f6c13ad"

	# "Fake" /etc/hostname setup for persistence across reboots
	#
	# Note the bind mount in 'docker run' below.
	if [ ! -d /var/etc/ ]
	then
		mkdir -p /var/etc
	fi
	if [ ! -d /var/home/docker ]
	then
		mkdir -p /var/home/docker
		chown -R docker:docker /var/home/docker
	fi
	if [ ! -f /var/etc/hostname ]
	then
		echo "moby" >/var/etc/hostname
	fi

	if [ -f /var/lib/waagent/provisioned ]
	then
		# During provisioning, the Azure agent usually does this, but
		# on reboots, it will need to be invoked "manually".
		hostname -F /var/etc/hostname
		kill -HUP "$(pidof dhcpcd)"
	fi

	docker run -d \
		--privileged \
		--name agent \
		--ipc host \
		--pid host \
		--net host \
		--uts host \
		--label com.docker.editions.system \
		--restart unless-stopped \
		-e DOCKER_FOR_IAAS_VERSION \
		-v /usr/bin/docker:/usr/local/bin/docker:ro \
		-v /mnt:/mnt \
		-v /etc:/etc \
		-v /var/etc/ssh:/etc/ssh \
		-v /var/etc/hostname:/etc/hostname \
		-v /var/home:/home \
		-v /var/run/docker.sock:/var/run/docker.sock \
		-v /var/log:/var/log \
		-v /lib/modules:/lib/modules \
		-v /lib/firmware:/lib/firmware \
		-v /var/lib/waagent:/var/lib/waagent \
		"docker4x/agent-azure@sha256:$DOCKER_FOR_IAAS_VERSION_DIGEST"

	# Wait for docker user to be added by agent.
	while [ ! -d /home/docker ]
	do
		sleep 5
	done

	# TODO: Make this cleaner.
	# User gets added by waagent.
	# Need to unlock it to login via SSH.
	passwd -u docker
	checkpath --directory --mode 0700 /home/docker/.ssh

	# Wait for WALinux agent provisioning to finish before invoking the
	# passed custom data.  This assures us that hostname etc. is set
	# correctly before running, say, swarm commmands.
	while [ ! -f /var/lib/waagent/provisioned ]
	do
		sleep 5
	done

	cat <<EOF >/etc/docker/daemon.json
{
	"log-driver": "syslog",
	"log-opts": {
		"syslog-address": "udp://localhost:514",
		"tag": "{{.Name}}/{{.ID}}"
	}
}
EOF

	# Ensure correct hostname according to Azure and reload daemon config
	service docker restart

	. /var/lib/waagent/CustomData

	eend 0
}

stop()
{
	[ "$(mobyplatform)" != "azure" ] && exit 0
	docker rm -f agent || true
	passwd -l docker
}
