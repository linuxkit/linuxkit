#!/bin/sh

if [ $# -ne 2 ]
then
  printf "usage: $0 [get|exists|watch|path|dir] key\n"
  exit 0
fi

if [ $1 == "set" ]
then
  printf "Configuration is immutable\n" 1>&2
  exit 1
fi

if ! cat /proc/cmdline | grep -q 'com.docker.database'
then
  printf "Could not find database configuration information\n" 1>&2
  exit 1
fi

if [ ! -d /Database ]
then
  mkdir -p /Database
  mount -t 9p -o trans=virtio,dfltuid=1001,dfltgid=50,version=9p2000 db /Database
  if [ $? -ne 0 ]
  then
    rm -rf /Database
    printf "Could not mount configuration database\n" 1>&2
    exit 1
  fi
fi

DATABASE="$(cat /proc/cmdline | sed -e 's/.*com.docker.database="//' -e 's/".*//')"
BASE="/Database/branch/master/ro/${DATABASE}"

KEY=$(echo $2 | sed 's@^/@@')

if [ $1 == "exists" ]
then
  [ -e ${BASE}/${KEY} ] && exit 0 || exit 1
fi

if [ $1 == "dir" ]
then
  [ -d ${BASE}/${KEY} ] && exit 0 || exit 1
fi

if [ $1 == "get" ]
then
  if [ -f ${BASE}/${KEY} ]
  then
    cat ${BASE}/${KEY}
    exit 0
  else
    printf "No such key: ${KEY}\n" 1>&2
    exit 1
  fi
fi

if [ $1 == "path" ]
then
  if [ -e ${BASE}/${KEY} ]
  then
    printf ${BASE}/${KEY}
    exit 0
  else
    printf "No such key: ${KEY}\n" 1>&2
    exit 1
  fi
fi

# might be nicer if watch returned a file descriptor not a path
# /Database/branch/master/watch/com.docker.driver.amd64-linux.node/etc.node/docker.node/daemon.json.node/tree.live
if [ $1 == "watch" ]
then
  WATCHBASE="/Database/branch/master/watch/${DATABASE}.node"
  WATCH="${WATCHBASE}/$(echo ${KEY} | sed 's@/@.node/@g').node/tree.live"
  if [ -f ${WATCH} ]
  then
    printf ${WATCH}
    exit 0
  else
    printf "No such watch: ${WATCH}\n" 2>&1
    exit 1
  fi
fi

printf "usage: $0 [get|exists|watch|path|dir] key\n"
exit 1
