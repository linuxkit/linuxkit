#!/bin/sh

if [ $# -ne 2 ]
then
  printf "usage: $0 [get|set|wait|exists|path|dir|find] key\n"
  exit 0
fi

BASE=/Database

KEY=$(echo $2 | sed 's@^/@@')

if [ $1 == "exists" ]
then
  [ -d ${BASE}/${KEY} ] && exit 0
  [ -f ${BASE}/${KEY} ] || exit 1
  VALUE="$(cat ${BASE}/${KEY} | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
  [ -z "${VALUE}" ] && exit 1
  exit 0
fi

if [ $1 == "dir" ]
then
  [ -d ${BASE}/${KEY} ] && exit 0 || exit 1
fi

if [ $1 == "get" ]
then
  if [ -f ${BASE}/${KEY} ]
  then
    cat ${BASE}/${KEY}
    exit 0
  else
    printf "No such key: ${KEY}\n" 1>&2
    exit 1
  fi
fi

if [ $1 == "set" ]
then
  mkdir -p $(dirname "${BASE}/${KEY}")
  cat - > ${BASE}/${KEY}
  exit 0
fi

if [ $1 == "wait" ]
then
  while [ ! -s ${BASE}/${KEY} ]
  do
    sleep 1
  done
  exit 0
fi

if [ $1 == "path" ]
then
  if [ -e ${BASE}/${KEY} ]
  then
    printf ${BASE}/${KEY}
    exit 0
  else
    printf "No such key: ${KEY}\n" 1>&2
    exit 1
  fi
fi

if [ $1 == "find" ]
then
  if [ -e ${BASE}/${KEY} ]
  then
    find ${BASE}/${KEY} -type f | sed "s@^${BASE}@@g"
    exit 0
  else
    printf "No such key: ${KEY}\n" 1>&2
    exit 1
  fi
fi

printf "usage: $0 [get|set|wait|exists|path|dir|find] key\n"
exit 1
