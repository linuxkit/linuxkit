#!/bin/sh

if [ $# -ne 2 ]
then
  printf "usage: $0 [get|exists|path|dir|find] key\n"
  exit 0
fi

if [ $1 == "set" ]
then
  printf "Configuration is immutable\n" 1>&2
  exit 1
fi

if [ ! -d /Database ]
then
  mkdir -p /Database
  case "$(mobyplatform)" in
    windows)
      /sbin/9pmount-vsock listen db /Database
      [ $? -ne 0 ] && rm -rf /Database && printf "Could not mount configuration database\n" 1>&2 && exit 1
    ;;
    mac)
      mount -t 9p -o trans=virtio,dfltuid=1001,dfltgid=50,version=9p2000 db /Database
      [ $? -ne 0 ] && rm -rf /Database && printf "Could not mount configuration database\n" 1>&2 && exit 1
    ;;
  esac
fi

case "$(mobyplatform)" in
  windows|mac)
    DATABASE="com.docker.driver.amd64-linux"
    BASE="/Database/branch/master/ro/${DATABASE}"
  ;;
  aws)
    # add some keys from AWS meta-data
    # we probably need an additional source for other items, as user data too small
    BASE="/Database"
    if [ ! -f $BASE/etc/hostname ]
    then
      mkdir -p "$BASE/etc"
      ENDPOINT="http://169.254.169.254/latest/meta-data"
      curl "${ENDPOINT}/local-hostname" 2> /dev/null > /Database/etc/hostname
      # TODO should collect all keys
      curl -f -I "${ENDPOINT}/public-keys/0/openssh-key" 2> /dev/null > /dev/null && \
        curl "${ENDPOINT}/public-keys/0/openssh-key" 2> /dev/null > "$BASE/authorized_keys"
      USERDATA="http://169.254.169.254/latest/user-data/"
      curl "${USERDATA}" 2> /dev/null > /Database/userdata
    fi
  ;;
  *)
    # For other editions, currently all database keys will be reported as empty.
    # Later they will build a tree from other sources.
    BASE="/Database"
esac

KEY=$(echo $2 | sed 's@^/@@')

if [ $1 == "exists" ]
then
  [ -d ${BASE}/${KEY} ] && exit 0
  [ -f ${BASE}/${KEY} ] || exit 1
  VALUE="$(cat ${BASE}/${KEY} | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
  [ -z "${VALUE}" ] && exit 1
  exit 0
fi

if [ $1 == "dir" ]
then
  [ -d ${BASE}/${KEY} ] && exit 0 || exit 1
fi

if [ $1 == "get" ]
then
  if [ -f ${BASE}/${KEY} ]
  then
    cat ${BASE}/${KEY}
    exit 0
  else
    printf "No such key: ${KEY}\n" 1>&2
    exit 1
  fi
fi

if [ $1 == "path" ]
then
  if [ -e ${BASE}/${KEY} ]
  then
    printf ${BASE}/${KEY}
    exit 0
  else
    printf "No such key: ${KEY}\n" 1>&2
    exit 1
  fi
fi

if [ $1 == "find" ]
then
  if [ -e ${BASE}/${KEY} ]
  then
    find ${BASE}/${KEY} -type f | sed "s@^${BASE}@@g"
    exit 0
  else
    printf "No such key: ${KEY}\n" 1>&2
    exit 1
  fi
fi

printf "usage: $0 [get|exists|path|dir|find] key\n"
exit 1
